# generated by datamodel-codegen:
#   filename:  schema.json
#   timestamp: 2025-10-25T08:50:11+00:00

from __future__ import annotations

from datetime import date, datetime
from typing import Optional

from pydantic import BaseModel, Extra, Field


class CustomerInfo(BaseModel):
    name: Optional[str] = Field(None, description='Name of the customer')
    address: Optional[str] = Field(None, description='Address of the customer')


class OrderInfo(BaseModel):
    orderNumber: Optional[str] = Field(
        None, description='Unique identifier for the order'
    )
    receiptNumber: Optional[str] = Field(
        None, description='Unique identifier for the receipt'
    )
    invoiceDate: Optional[date] = Field(None, description='Date of the invoice')


class TicketInfo(BaseModel):
    purchaseDate: Optional[date] = Field(None, description='Date of ticket purchase')
    description: Optional[str] = Field(
        None,
        description='Description of the ticket including type, validity, and route',
    )
    validFrom: Optional[datetime] = Field(
        None, description='Start of ticket validity period'
    )
    validTo: Optional[datetime] = Field(
        None, description='End of ticket validity period'
    )
    bookingNumber: Optional[str] = Field(
        None, description='Booking number for the ticket'
    )


class PaymentInfo(BaseModel):
    netAmount: Optional[float] = Field(None, description='Net amount of the purchase')
    vatRate: Optional[float] = Field(
        None, description='VAT rate applied to the purchase'
    )
    vatAmount: Optional[float] = Field(None, description='Amount of VAT charged')
    totalAmount: Optional[float] = Field(None, description='Total amount including VAT')
    paymentMethod: Optional[str] = Field(None, description='Method of payment used')


class VendorInfo(BaseModel):
    name: Optional[str] = Field(None, description='Name of the vendor')
    taxNumber: Optional[str] = Field(
        None, description='Tax identification number of the vendor'
    )


class Model(BaseModel):
    class Config:
        extra = Extra.allow

    customerInfo: Optional[CustomerInfo] = Field(
        None, description='Information about the customer'
    )
    orderInfo: Optional[OrderInfo] = Field(
        None, description='Information about the order and receipt'
    )
    ticketInfo: Optional[TicketInfo] = Field(
        None, description='Details of the purchased ticket'
    )
    paymentInfo: Optional[PaymentInfo] = Field(
        None, description='Payment details of the purchase'
    )
    vendorInfo: Optional[VendorInfo] = Field(
        None, description='Information about the vendor'
    )
    freetext: Optional[str] = Field(
        None,
        description='A free text comment. Add any other relevant information not part of the schema but important for the user here.',
    )
